`ReentrantLock` 用于替代 `synchronized`
* 使用re必须手动释放锁；
  使用syn锁定时如果遇到异常，jvm会自动释放锁，但是lock必须手动释放锁，因此经常在finally中进行锁释放。

* re可以尝试锁定`tryLock`，如果无法锁定或在指定时间内无法锁定，线程可以决定是否继续进行。syn如果无法锁定则只能阻塞等待。

* re可以使用`lockinterruptibly`方法，可以对线程使用`interrupt`方法做出响应，即在一个线程等待锁的过程中，可以被打断。

* re还可以指定为公平锁，默认为非公平锁。